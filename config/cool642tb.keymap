#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MOUSE  4
#define SCROLL 5
#define NUM    6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE     AT               // "
#define JP_AMPERSAND  CARET            // &
#define JP_QUOTE      AMPERSAND        // '
#define JP_EQUAL      UNDER            // =
#define JP_CARET      EQUAL            // ^
#define JP_YEN        0x89             // ¥
#define JP_PLUS       COLON            // +
#define JP_TILDE      PLUS             // ~
#define JP_PIPE       LS(0x89)         // |
#define JP_AT         LEFT_BRACKET     // @
#define JP_COLON      SINGLE_QUOTE     // :
#define JP_ASTRK      DOUBLE_QUOTES    // *
#define JP_BACKQUOTE  LEFT_BRACE       // `
#define JP_UNDERSCORE LS(0x87)         // _
#define JP_LBRACKET   RIGHT_BRACKET    // [
#define JP_RBRACKET   BACKSLASH        // ]
#define JP_LPAREN     ASTERISK         // (
#define JP_RPAREN     LEFT_PARENTHESIS // )
#define JP_LBRACE     RIGHT_BRACE      // {
#define JP_RBRACE     PIPE             // }
#define JP_KANA       LANGUAGE_1       // かな
#define JP_EISU       LANGUAGE_2       // 英数
#define JP_HANZEN     GRAVE            // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&lt { quick-tap-ms = <150>; };

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        muhenkan {
            bindings = <&none>;
            key-positions = <13 12>;
        };

        henkan {
            bindings = <&none>;
            key-positions = <18 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        // [ , shift: {

        jis_LBKT: jis_LBKT {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_LBKT";
            #binding-cells = <0>;
            bindings = <&kp JP_LBRACKET>, <&kp JP_LBRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // ] , shift: }

        jis_RBKT: jis_RBKT {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_RBKT";
            #binding-cells = <0>;
            bindings = <&kp JP_RBRACKET>, <&kp JP_RBRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // ;, shift: :

        jis_COLON: jis_COLON {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_COLON";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp JP_COLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tapmodcolon: tapmodcolon {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPMOD_COLON";
            #binding-cells = <2>;

            // tap hold mod(shift)

            bindings = <&kp>, <&jis_COLON>;

            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htkp: htkp {
            compatible = "zmk,behavior-hold-tap";
            label = "HTKP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W             &kp E           &kp R   &kp T                                 &kp Y       &kp U  &kp I            &kp O              &kp P
&mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_GUI D  &kp F   &kp G           &trans     &trans     &kp H       &kp J  &mt RIGHT_GUI K  &mt RIGHT_SHIFT L  &tapmodcolon RCTRL SEMI
&kp Z        &kp X             &kp C           &kp V   &kp B           &jis_LBKT  &jis_RBKT  &kp N       &kp M  &kp COMMA        &kp PERIOD         &kp SLASH
&trans       &trans            &trans          &trans  &lt 1 LEFT_ALT  &kp SPACE  &kp ENTER  &lt 2 BKSP                                             &mo 3
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        left {
            bindings = <
&kp EXCL  &kp JP_AT  &kp HASH  &kp DLLR  &kp PRCNT                                   &kp CARET   &kp AMPS  &kp JP_ASTRK   &kp JP_LPAREN   &kp JP_RPAREN
&kp N1    &kp N2     &kp N3    &kp N4    &kp N5     &trans         &trans            &trans      &trans    &trans         &trans          &tapmodcolon RCTRL SEMI
&kp N6    &kp N7     &kp N8    &kp N9    &kp N0     &kp JP_LBRACE  &kp JP_RBRACE     &trans      &trans    &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(SLASH)
&trans    &trans     &trans    &trans    &trans     &trans         &kp INT_MUHENKAN  &kp ESCAPE                                           &kp LS(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        right {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                          &kp F6    &kp F7          &kp F8         &kp F9          &kp F10
&trans  &trans  &trans  &trans  &trans      &trans               &trans         &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT       &kp JP_COLON
&trans  &trans  &trans  &trans  &trans      &kp JP_LBRACE        &kp JP_RBRACE  &trans    &trans          &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(SLASH)
&trans  &trans  &trans  &trans  &kp ESCAPE  &kp INTERNATIONAL_4  &trans         &trans                                                   &kp LS(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        config {
            bindings = <
&trans        &trans        &trans        &trans        &trans                        &trans      &trans      &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &bt BT_NXT  &bt BT_PRV  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans      &trans      &trans  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans  &trans  &trans                                  &trans
            >;
        };
    };
};

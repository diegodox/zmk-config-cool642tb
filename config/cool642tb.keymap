#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        comb2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        jis_AT: jis_AT {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_AT";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_QUOTE: jis_QUOTE {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp QUOT>, <&kp N2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_AMP: jis_AMP {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_AMP";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp AMPS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_SQUOTE: jis_SQUOTE {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_SQUOTE";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_LPAREN: jis_LPAREN {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_LPAREN";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_RPAREN: jis_RPAREN {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_RPAREN";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_LBKT: jis_LBKT {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_LBKT";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_RBKT: jis_RBKT {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_RBKT";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jis_BACKQUOTE: jis_BACKQUOTE {
            compatible = "zmk,behavior-mod-morph";
            label = "jis_BACKQUOTE";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &kp E  &kp R         &kp T                                                      &kp Y            &kp U  &kp I      &kp O       &kp P
&mt LCTRL A       &kp S  &kp D  &kp F         &kp G               &none             &kp INTERNATIONAL_4  &kp H            &kp J  &kp K      &kp L       &mt RCTRL SEMICOLON
&mt LEFT_SHIFT Z  &kp X  &kp C  &kp V         &kp B               &jis_LBKT         &jis_RBKT            &kp N            &kp M  &kp COMMA  &kp PERIOD  &mt LEFT_SHIFT SLASH
&none             &none  &none  &kp LEFT_GUI  &lt 1 INT_MUHENKAN  &lt 3 SPACE       &lt 4 ENTER          &lt 2 BACKSPACE                                &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        left {
            bindings = <
&kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                                               &kp LS(N6)  &kp LS(N7)  &kp LS(N8)     &kp LS(N9)      &kp LS(N0)
&kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &none                 &none                  &none       &none       &none          &none           &kp COLON
&kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &jis_LBKT             &kp LC(jis_RBKT)       &none       &none       &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(SLASH)
&none       &none       &none       &none       &none       &none                 &none                  &kp ESCAPE                                             &kp LS(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        right {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                       &none     &kp U           &kp I          &kp O           &kp P
&none   &none   &none   &none   &none       &none           &none            &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT       &kp COLON
&none   &none   &none   &none   &none       &jis_LBKT       &jis_RBKT        &none     &none           &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(SLASH)
&none   &none   &none   &none   &kp ESCAPE  &none           &none            &none                                                    &kp LS(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q       &kp W    &kp E             &kp R         &kp T                            &kp Y          &kp U  &kp I     &kp O     &kp P
&kp A       &kp S    &kp D             &kp F         &kp G     &kp N1    &kp N2       &kp H          &kp J  &kp K     &kp L     &kp ENTER
&kp Z       &kp X    &kp C             &kp V         &kp B     &kp N3    &kp N4       &kp N          &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&kp ESCAPE  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &mkp MB1  &mkp MB2  &lt 2 SPACE  &kp BACKSPACE                             &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
